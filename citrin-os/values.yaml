# Values configuration for CitrinOS deployment
# This file defines the configuration for multiple services: Directus, Citrine, RabbitMQ, and PostgreSQL

# Namespace configuration
namespace:
  name: citrin-os # Kubernetes namespace for the entire application

# Directus - Headless CMS configuration
directus:
  name: directus
  image:
    repository: aolishchuk/directus # Docker image repository
    tag: v-1.0.1 # Image version tag
  replicas: 1 # Number of pod replicas
  port: 8055 # Main service port
  livenessProbe:
    # Health check configuration
    path: /server/health # Health check endpoint
    initialDelaySeconds: 15 # Time to wait before first probe
    periodSeconds: 15 # Time between probes
    timeoutSeconds: 15 # Probe timeout duration
    failureThreshold: 3 # Number of failures before considering unhealthy

# Citrine - Main application service
citrine:
  name: citrine
  image:
    repository: aolishchuk/citrine # Docker image repository
    tag: v-1.0.0 # Image version tag
  replicas: 1 # Number of pod replicas
  ports:
  # Multiple ports exposure
  - port: 8080 # Main HTTP port
  - port: 8081 # Additional service port
  - port: 8082 # Additional service port
  - port: 8085 # Additional service port
  - port: 8443 # HTTPS port
  - port: 8444 # Additional HTTPS port
  - port: 9229 # Debug port

# RabbitMQ - Message broker configuration
rabbitmq:
  name: amqp-broker
  image:
    repository: rabbitmq # Official RabbitMQ image
    tag: 3-management # Version with management interface
  replicas: 1 # Number of pod replicas
  ports:
  - name: management
    port: 15672 # Management interface port
  - name: amqp
    port: 5672 # AMQP protocol port
  auth:
    username: "guest" # Default RabbitMQ username
    password: "guest" # Default RabbitMQ password
  persistence:
    enabled: true # Enable persistent storage
    size: 1Gi # Storage size
    accessMode: ReadWriteOnce # Storage access mode
  livenessProbe:
    # Health check configuration
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3

# PostgreSQL with PostGIS - Database configuration
postgresql:
  name: ocpp-db
  image:
    repository: citrineos/postgis # Custom PostgreSQL image with PostGIS
    tag: v1.1.0 # Image version
  replicas: 1 # Number of pod replicas
  port: 5432 # PostgreSQL port
  initContainer:
    # Initialization container
    image: busybox
    command:
    # Commands to set up data directory
    - 'sh'
    - '-c'
    - 'mkdir -p /var/lib/postgresql/data/pgdata && chown -R 999:999 /var/lib/postgresql/data/pgdata'
  database:
    name: "citrine" # Database name
    user: "citrine" # Database user
    password: "citrine" # Database password
    pgdata: "/var/lib/postgresql/data/pgdata" # Data directory path
  persistence:
    enabled: true # Enable persistent storage
    size: 1Gi # Storage size
    accessMode: ReadWriteOnce # Storage access mode
  livenessProbe:
    # Health check configuration
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 10
    failureThreshold: 5
